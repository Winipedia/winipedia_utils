name: Health Check Workflow
'on':
  workflow_dispatch: {}
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
  schedule:
  - cron: 0 6 * * *
permissions: {}
run-name: Health Check Workflow
defaults:
  run:
    shell: bash
jobs:
  Health Check Matrix:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        python-version:
        - '3.12'
        - '3.13'
        - '3.14'
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      id: checkout_repository
      uses: actions/checkout@main
    - name: Setup Python
      id: setup_python
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Poetry
      id: setup_poetry
      uses: snok/install-poetry@main
    - name: Add Poetry To Windows Path
      id: add_poetry_to_windows_path
      run: echo 'C:/Users/runneradmin/.local/bin' >> $GITHUB_PATH
      if: runners.os == 'Windows'
    - name: Install Python Dependencies
      id: install_python_dependencies
      run: poetry install
    - name: Setup Keyring
      id: setup_keyring
      run: poetry run pip install keyrings.alt && poetry run python -c "import keyring;
        from keyrings.alt.file import PlaintextKeyring; keyring.set_keyring(PlaintextKeyring());"
    - name: Protect Repository
      id: protect_repository
      run: poetry run python -m winipedia_utils.git.github.repo.protect
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Run Pre Commit Hooks
      id: run_pre_commit_hooks
      run: poetry run pre-commit run --all-files --verbose
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  Health Check:
    needs:
    - Health Check Matrix
    runs-on: ubuntu-latest
    steps:
    - name: Aggregate Matrix Results
      id: aggregate_matrix_results
      run: echo 'Aggregating matrix results into one job.'
