name: Release Workflow
'on':
  push:
    branches:
    - main
  workflow_dispatch: {}
  schedule:
  - cron: 0 6 * * 2
permissions:
  contents: write
run-name: Release Workflow
defaults:
  run:
    shell: bash
jobs:
  health_check_matrix:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        python-version:
        - '3.12'
        - '3.13'
        - '3.14'
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@main
      with:
        token: ${{ secrets.REPO_TOKEN }}
    - name: Setup Git
      run: git config --global user.email "github-actions[bot]@users.noreply.github.com"
        && git config --global user.name "github-actions[bot]"
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Poetry
      uses: snok/install-poetry@main
    - name: Add Poetry to PATH
      run: echo 'C:/Users/runneradmin/.local/bin' >> $GITHUB_PATH
    - name: Install Dependencies
      run: poetry install
    - name: Setup CI keyring
      run: poetry run pip install keyrings.alt && poetry run python -c "import keyring;
        from keyrings.alt.file import PlaintextKeyring; keyring.set_keyring(PlaintextKeyring());"
    - name: Protect Repository
      run: poetry run python -m winipedia_utils.git.github.repo.protect
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Run Hooks
      run: poetry run pre-commit run --all-files --verbose
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  health_check:
    runs-on: ubuntu-latest
    needs:
    - health_check_matrix
    - release_matrix
    steps:
    - name: Aggregate Matrix Results
      run: echo 'Aggregating matrix results into one job.'
  release:
    runs-on: ubuntu-latest
    needs:
    - health_check
    steps:
    - name: Checkout repository
      uses: actions/checkout@main
      with:
        token: ${{ secrets.REPO_TOKEN }}
    - name: Setup Git
      run: git config --global user.email "github-actions[bot]@users.noreply.github.com"
        && git config --global user.name "github-actions[bot]"
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: 3.14.0
    - name: Setup Poetry
      uses: snok/install-poetry@main
    - name: Install Dependencies
      run: poetry install
    - name: Setup CI keyring
      run: poetry run pip install keyrings.alt && poetry run python -c "import keyring;
        from keyrings.alt.file import PlaintextKeyring; keyring.set_keyring(PlaintextKeyring());"
    - name: Run Hooks
      run: poetry run pre-commit run --all-files --verbose
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Commit added changes
      run: 'git commit --no-verify -m ''[skip ci] CI/CD: Committing possible added
        changes (e.g.: pyproject.toml and poetry.lock)'''
    - name: Extract Version from pyproject.toml
      id: version
      run: 'version=$(poetry version -s) && echo "Project version: $version" && echo
        "version=v$version" >> $GITHUB_OUTPUT'
    - name: Tag and Push
      run: git push && git tag ${{ steps.version.outputs.version }} && git push origin
        ${{ steps.version.outputs.version }}
    - name: Build Changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@develop
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create GitHub Release
      uses: ncipollo/release-action@main
      with:
        tag: ${{ steps.version.outputs.version }}
        name: ${{ github.event.repository.name }} ${{ steps.version.outputs.version
          }}
        body: ${{ steps.build_changelog.outputs.changelog }}
