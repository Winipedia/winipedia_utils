[project]
name = "winipedia-utils"
version = "0.1.0"
description = "A package with many utility functions"
authors = [
    {name = "Winipedia"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    {include = "winipedia_utils"}
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.7"
pre-commit = "^4.2.0"
mypy = "^1.15.0"
types-setuptools = "^80.4.0.20250511"
types-tqdm = "^4.67.0.20250417"
types-defusedxml = "^0.7.0.20240218"


[tool.poetry.dependencies]
tqdm = "^4.67.1"
pytest = "^8.3.5"
setuptools = "^80.3.1"
defusedxml = "^0.7.1"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".*",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
  "D203",  # conflicts with D211
  "D213",  # conflicts with D212
  "COM812",  # avoid conflict with formatter
]
fixable = [
    "ALL"
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true
show_error_codes = true
pretty = true
files = "."

[tool.pytest.ini_options]
testpaths = ["tests"]
